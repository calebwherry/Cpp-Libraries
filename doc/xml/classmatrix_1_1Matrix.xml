<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classmatrix_1_1Matrix" kind="class" prot="public">
    <compoundname>matrix::Matrix</compoundname>
    <includes refid="Matrix_8hpp" local="yes">Matrix.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;T&gt; &gt; matrix::Matrix&lt; T &gt;::matrix</definition>
        <argsstring></argsstring>
        <name>matrix</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="45" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="classmatrix_1_1Matrix_1a160cd27af60a63f8ecb512f1c3ed610e" compoundref="Matrix_8hpp" startline="87" endline="87">matrix::Matrix&lt; T &gt;::getMatrix</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a054d22cc5b7c78711c823310f71495f5" compoundref="Matrix_8hpp" startline="214" endline="222">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmatrix_1_1Matrix_1ab58c595a633eaaf7ea4845cce59c90fb" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t matrix::Matrix&lt; T &gt;::numRows</definition>
        <argsstring></argsstring>
        <name>numRows</name>
        <briefdescription>
<para>Number of rows. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="46" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="46" bodyend="-1"/>
        <referencedby refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a823e33972f72b1f942099982dc101fea" compoundref="Matrix_8hpp" startline="237" endline="254">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmatrix_1_1Matrix_1a5571a658e4320efa3312dac1081b0ce2" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t matrix::Matrix&lt; T &gt;::numCols</definition>
        <argsstring></argsstring>
        <name>numCols</name>
        <briefdescription>
<para>Number of columns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="47" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="47" bodyend="-1"/>
        <referencedby refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a823e33972f72b1f942099982dc101fea" compoundref="Matrix_8hpp" startline="237" endline="254">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmatrix_1_1Matrix_1a361ac8fbb03f94da4b76767a747e5b71" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string matrix::Matrix&lt; T &gt;::pad</definition>
        <argsstring></argsstring>
        <name>pad</name>
        <briefdescription>
<para>Pad used when printing matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="48" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="48" bodyend="-1"/>
        <referencedby refid="classmatrix_1_1Matrix_1ad0cc3825f9c5a88baec185be52a56af7" compoundref="Matrix_8hpp" startline="94" endline="94">matrix::Matrix&lt; T &gt;::getPad</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a83c1665465ab7ef98fa7003127cadac9" compoundref="Matrix_8hpp" startline="95" endline="95">matrix::Matrix&lt; T &gt;::setPad</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a054d22cc5b7c78711c823310f71495f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>matrix::Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="58" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="214" bodyend="222"/>
        <references refid="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" compoundref="Matrix_8hpp" startline="45">matrix::Matrix&lt; T &gt;::matrix</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>matrix::Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
          <briefdescription><para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> to copy from. </para></briefdescription>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="61" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="226" bodyend="233"/>
        <references refid="classmatrix_1_1Matrix_1a160cd27af60a63f8ecb512f1c3ed610e" compoundref="Matrix_8hpp" startline="87" endline="87">matrix::Matrix&lt; T &gt;::getMatrix</references>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
        <references refid="classmatrix_1_1Matrix_1ad0cc3825f9c5a88baec185be52a56af7" compoundref="Matrix_8hpp" startline="94" endline="94">matrix::Matrix&lt; T &gt;::getPad</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a823e33972f72b1f942099982dc101fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>matrix::Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(uint32_t _numRows, uint32_t _numCols, const T &amp;initVals=0, const std::string &amp;_pad=emptyStr)</argsstring>
        <name>Matrix</name>
        <param>
          <type>uint32_t</type>
          <declname>_numRows</declname>
          <briefdescription><para>Number of rows new matrix will have. </para></briefdescription>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_numCols</declname>
          <briefdescription><para>Number of columns new matrix will have. </para></briefdescription>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>initVals</declname>
          <defval>0</defval>
          <briefdescription><para>Initial value of all elements of new matrix. </para></briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_pad</declname>
          <defval><ref refid="namespacematrix_1a3410a3377815b8c5431e5436a31774c4" kindref="member">emptyStr</ref></defval>
          <briefdescription><para>Printing pad. </para></briefdescription>
        </param>
        <briefdescription>
<para>Custom Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="66" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="237" bodyend="254"/>
        <references refid="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" compoundref="Matrix_8hpp" startline="45">matrix::Matrix&lt; T &gt;::matrix</references>
        <references refid="classmatrix_1_1Matrix_1a5571a658e4320efa3312dac1081b0ce2" compoundref="Matrix_8hpp" startline="47">matrix::Matrix&lt; T &gt;::numCols</references>
        <references refid="classmatrix_1_1Matrix_1ab58c595a633eaaf7ea4845cce59c90fb" compoundref="Matrix_8hpp" startline="46">matrix::Matrix&lt; T &gt;::numRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ab79912b5a12d7aa327e6bf0d918f4de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>matrix::Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(std::initializer_list&lt; std::initializer_list&lt; T &gt;&gt; _matrix)</argsstring>
        <name>Matrix</name>
        <param>
          <type>std::initializer_list&lt; std::initializer_list&lt; T &gt;&gt;</type>
          <declname>_matrix</declname>
          <briefdescription><para>Initial values list. </para></briefdescription>
        </param>
        <briefdescription>
<para>Initializer_list Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="74" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="258" bodyend="291"/>
        <references refid="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" compoundref="Matrix_8hpp" startline="45">matrix::Matrix&lt; T &gt;::matrix</references>
        <references refid="classmatrix_1_1Matrix_1a5571a658e4320efa3312dac1081b0ce2" compoundref="Matrix_8hpp" startline="47">matrix::Matrix&lt; T &gt;::numCols</references>
        <references refid="classmatrix_1_1Matrix_1ab58c595a633eaaf7ea4845cce59c90fb" compoundref="Matrix_8hpp" startline="46">matrix::Matrix&lt; T &gt;::numRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a936cd883f1768e78478925929ea3d147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>matrix::Matrix&lt; T &gt;::~Matrix</definition>
        <argsstring>()</argsstring>
        <name>~Matrix</name>
        <briefdescription>
<para>Deconstructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="79" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a160cd27af60a63f8ecb512f1c3ed610e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;T&gt; &gt; matrix::Matrix&lt; T &gt;::getMatrix</definition>
        <argsstring>() const </argsstring>
        <name>getMatrix</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="87" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="87" bodyend="87"/>
        <references refid="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" compoundref="Matrix_8hpp" startline="45">matrix::Matrix&lt; T &gt;::matrix</references>
        <referencedby refid="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" compoundref="Matrix_8hpp" startline="226" endline="233">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t matrix::Matrix&lt; T &gt;::getNumRows</definition>
        <argsstring>() const </argsstring>
        <name>getNumRows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="90" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="90" bodyend="90"/>
        <references refid="classmatrix_1_1Matrix_1ab58c595a633eaaf7ea4845cce59c90fb" compoundref="Matrix_8hpp" startline="46">matrix::Matrix&lt; T &gt;::numRows</references>
        <referencedby refid="classmatrix_1_1Matrix_1ac5e3210355a0ef21cb754f0015c101ff" compoundref="Matrix_8hpp" startline="896" endline="914">matrix::Matrix&lt; T &gt;::commutesWith</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" compoundref="Matrix_8hpp" startline="226" endline="233">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1ad99f5a3971abebfe3545dde85612268f" compoundref="Matrix_8hpp" startline="365" endline="393">matrix::Matrix&lt; T &gt;::operator*</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a62767d118083954b144767496c02205c" compoundref="Matrix_8hpp" startline="397" endline="421">matrix::Matrix&lt; T &gt;::operator+</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1aac28bf5632d40be2c595ccbf9bfe66a8" compoundref="Matrix_8hpp" startline="425" endline="437">matrix::Matrix&lt; T &gt;::operator-</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a5b1d2cf9e238f15d6e85e8084feafe83" compoundref="Matrix_8hpp" startline="327" endline="361">matrix::Matrix&lt; T &gt;::operator=</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1ac6de29be44b19310f134cffd3328017d" compoundref="Matrix_8hpp" startline="566" endline="589">matrix::Matrix&lt; T &gt;::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t matrix::Matrix&lt; T &gt;::getNumCols</definition>
        <argsstring>() const </argsstring>
        <name>getNumCols</name>
        <briefdescription>
<para>Row accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="91" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="91" bodyend="91"/>
        <references refid="classmatrix_1_1Matrix_1a5571a658e4320efa3312dac1081b0ce2" compoundref="Matrix_8hpp" startline="47">matrix::Matrix&lt; T &gt;::numCols</references>
        <referencedby refid="classmatrix_1_1Matrix_1ac5e3210355a0ef21cb754f0015c101ff" compoundref="Matrix_8hpp" startline="896" endline="914">matrix::Matrix&lt; T &gt;::commutesWith</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" compoundref="Matrix_8hpp" startline="226" endline="233">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1ad99f5a3971abebfe3545dde85612268f" compoundref="Matrix_8hpp" startline="365" endline="393">matrix::Matrix&lt; T &gt;::operator*</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a62767d118083954b144767496c02205c" compoundref="Matrix_8hpp" startline="397" endline="421">matrix::Matrix&lt; T &gt;::operator+</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1aac28bf5632d40be2c595ccbf9bfe66a8" compoundref="Matrix_8hpp" startline="425" endline="437">matrix::Matrix&lt; T &gt;::operator-</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a5b1d2cf9e238f15d6e85e8084feafe83" compoundref="Matrix_8hpp" startline="327" endline="361">matrix::Matrix&lt; T &gt;::operator=</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1ac6de29be44b19310f134cffd3328017d" compoundref="Matrix_8hpp" startline="566" endline="589">matrix::Matrix&lt; T &gt;::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ad0cc3825f9c5a88baec185be52a56af7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string matrix::Matrix&lt; T &gt;::getPad</definition>
        <argsstring>() const </argsstring>
        <name>getPad</name>
        <briefdescription>
<para>Columns accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="94" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="94" bodyend="94"/>
        <references refid="classmatrix_1_1Matrix_1a361ac8fbb03f94da4b76767a747e5b71" compoundref="Matrix_8hpp" startline="48">matrix::Matrix&lt; T &gt;::pad</references>
        <referencedby refid="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" compoundref="Matrix_8hpp" startline="226" endline="233">matrix::Matrix&lt; T &gt;::Matrix</referencedby>
        <referencedby refid="classmatrix_1_1Matrix_1a5b1d2cf9e238f15d6e85e8084feafe83" compoundref="Matrix_8hpp" startline="327" endline="361">matrix::Matrix&lt; T &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a83c1665465ab7ef98fa7003127cadac9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void matrix::Matrix&lt; T &gt;::setPad</definition>
        <argsstring>(const std::string &amp;_pad)</argsstring>
        <name>setPad</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_pad</declname>
        </param>
        <briefdescription>
<para>Pad accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="95" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="95" bodyend="95"/>
        <references refid="classmatrix_1_1Matrix_1a361ac8fbb03f94da4b76767a747e5b71" compoundref="Matrix_8hpp" startline="48">matrix::Matrix&lt; T &gt;::pad</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a5b1d2cf9e238f15d6e85e8084feafe83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt; T &gt; &amp; matrix::Matrix&lt; T &gt;::operator=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
          <briefdescription><para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> to assign </para></briefdescription>
        </param>
        <briefdescription>
<para>Assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="110" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="327" bodyend="361"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
        <references refid="classmatrix_1_1Matrix_1ad0cc3825f9c5a88baec185be52a56af7" compoundref="Matrix_8hpp" startline="94" endline="94">matrix::Matrix&lt; T &gt;::getPad</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ad99f5a3971abebfe3545dde85612268f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator*</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Matrix Multiplication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="115" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="365" bodyend="393"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a62767d118083954b144767496c02205c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator+</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Matrix Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="116" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="397" bodyend="421"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1aac28bf5632d40be2c595ccbf9bfe66a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator-</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Matrix Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="117" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="425" bodyend="437"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a383ea46be492b62685a3c66b402c31d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator*</definition>
        <argsstring>(const T &amp;rhs) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Scalar Multiplication. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="123" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="441" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a31b5e71015aba29bd63ddb32a43aacf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator/</definition>
        <argsstring>(const T &amp;rhs) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Scalar Division. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="124" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="459" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a4796eea2f39bbfa3ff7f9ea4a5e5f423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator+</definition>
        <argsstring>(const T &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Scalar Addition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="125" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="483" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ac446198a45ad411e346504c6e4698952" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator-</definition>
        <argsstring>(const T &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Matrix/Scalar Subtraction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="126" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1abc3f4492ae439d7a0791bbc4e9449cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Negative. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="129" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="508" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1afb301157a2f218f5877793e8a238fc58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::operator^</definition>
        <argsstring>(const uint32_t &amp;power) const </argsstring>
        <name>operator^</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>power</declname>
        </param>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Power function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="130" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="515" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a3512dde740a7f45fb0484ee708887444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; matrix::Matrix&lt; T &gt;::operator()</definition>
        <argsstring>(const uint32_t &amp;row, const uint32_t &amp;col)</argsstring>
        <name>operator()</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Element Access. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="133" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="536" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a02230069885fb794d62f9d544103a987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; matrix::Matrix&lt; T &gt;::operator()</definition>
        <argsstring>(const uint32_t &amp;row, const uint32_t &amp;col) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Element Access (const) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="134" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="551" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ac6de29be44b19310f134cffd3328017d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::operator==</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Comparison. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="137" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="566" bodyend="589"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ac327db77a3c97f88e2a470c1205ddabd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::transpose</definition>
        <argsstring>() const </argsstring>
        <name>transpose</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Transpose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="144" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="593" bodyend="619"/>
        <referencedby refid="classmatrix_1_1Matrix_1a93366f67006829caba19b525814596ec" compoundref="Matrix_8hpp" startline="651" endline="661">matrix::Matrix&lt; T &gt;::conjugateTranspose</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a47464577950758a8a1da8455ea73ae27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::complexConjugate</definition>
        <argsstring>() const </argsstring>
        <name>complexConjugate</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Complex Conjugate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="145" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="623" bodyend="647"/>
        <referencedby refid="classmatrix_1_1Matrix_1a93366f67006829caba19b525814596ec" compoundref="Matrix_8hpp" startline="651" endline="661">matrix::Matrix&lt; T &gt;::conjugateTranspose</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a93366f67006829caba19b525814596ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::conjugateTranspose</definition>
        <argsstring>() const </argsstring>
        <name>conjugateTranspose</name>
        <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> Complex Conjugate Transpose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="146" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="651" bodyend="661"/>
        <references refid="classmatrix_1_1Matrix_1a47464577950758a8a1da8455ea73ae27" compoundref="Matrix_8hpp" startline="623" endline="647">matrix::Matrix&lt; T &gt;::complexConjugate</references>
        <references refid="classmatrix_1_1Matrix_1a151e185fb20fcc5913cf030e172dec91" compoundref="Matrix_8hpp" startline="689" endline="707">matrix::Matrix&lt; T &gt;::isReal</references>
        <references refid="classmatrix_1_1Matrix_1ac327db77a3c97f88e2a470c1205ddabd" compoundref="Matrix_8hpp" startline="593" endline="619">matrix::Matrix&lt; T &gt;::transpose</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a88fecb03afc587c908065bc920da5e55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt; T &gt; matrix::Matrix&lt; T &gt;::identity</definition>
        <argsstring>() const </argsstring>
        <name>identity</name>
        <briefdescription>
<para>Identity matrix of same size and type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="148" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="665" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a97d081b32df645d41eeccd7eb60464cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isSquare</definition>
        <argsstring>() const </argsstring>
        <name>isSquare</name>
        <briefdescription>
<para>Is matrix square? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="155" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="682" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a151e185fb20fcc5913cf030e172dec91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isReal</definition>
        <argsstring>() const </argsstring>
        <name>isReal</name>
        <briefdescription>
<para>Are all elements real? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="156" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="689" bodyend="707"/>
        <referencedby refid="classmatrix_1_1Matrix_1a93366f67006829caba19b525814596ec" compoundref="Matrix_8hpp" startline="651" endline="661">matrix::Matrix&lt; T &gt;::conjugateTranspose</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a6290d8381c92824a415850701a386572" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isComplex</definition>
        <argsstring>() const </argsstring>
        <name>isComplex</name>
        <briefdescription>
<para>Do any elements have imaginary parts? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="157" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="711" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a4f327f5ad7ef829a64d0f4ef3e20d29c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isSymmetric</definition>
        <argsstring>() const </argsstring>
        <name>isSymmetric</name>
        <briefdescription>
<para>A = A^T ? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="158" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="720" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ad85456fb492eac300607fad58ae83b3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isSkewSymmetric</definition>
        <argsstring>() const </argsstring>
        <name>isSkewSymmetric</name>
        <briefdescription>
<para>-A = A^T ? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="159" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="734" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1aef901991ff8a7effe565e56ddd43746e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isHermitian</definition>
        <argsstring>() const </argsstring>
        <name>isHermitian</name>
        <briefdescription>
<para>A = A^dagger (Complex extension of <ref refid="classmatrix_1_1Matrix_1a4f327f5ad7ef829a64d0f4ef3e20d29c" kindref="member">isSymmetric()</ref>) ? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="160" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="748" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a6cf8b183026095222f8385d4f5101da7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isSelfAdjoint</definition>
        <argsstring>() const </argsstring>
        <name>isSelfAdjoint</name>
        <briefdescription>
<para>Same as <ref refid="classmatrix_1_1Matrix_1aef901991ff8a7effe565e56ddd43746e" kindref="member">isHermitian()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="161" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a9a68a213355b21b0de2f9893944f8655" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isSkewHermitian</definition>
        <argsstring>() const </argsstring>
        <name>isSkewHermitian</name>
        <briefdescription>
<para>-A = A^dagger (Complex extension of <ref refid="classmatrix_1_1Matrix_1ad85456fb492eac300607fad58ae83b3b" kindref="member">isSkewSymmetric()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="162" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="769" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1afe2b7f3d7e5a2cfc9201ae003609015a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isNormal</definition>
        <argsstring>() const </argsstring>
        <name>isNormal</name>
        <briefdescription>
<para>Real: A*A^T = A^T*A; Complex: A*A^dagger = A^dagger*A. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="163" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="785" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1afda8e7a5303dc685cc81ccaac6aa6e98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isOrthogonal</definition>
        <argsstring>() const </argsstring>
        <name>isOrthogonal</name>
        <briefdescription>
<para>A*A^T = A^T*A = I. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="164" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="808" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a747a89e859c3222d2fca232f2caacf4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isUnitary</definition>
        <argsstring>() const </argsstring>
        <name>isUnitary</name>
        <briefdescription>
<para>A*A^dagger = A^dagger*A = I (Complex extension of <ref refid="classmatrix_1_1Matrix_1afda8e7a5303dc685cc81ccaac6aa6e98" kindref="member">isOrthogonal()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="165" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="831" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a08bab97349704f714b37ba9c27110514" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isProjection</definition>
        <argsstring>() const </argsstring>
        <name>isProjection</name>
        <briefdescription>
<para>A = A^2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="169" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="854" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a2ada015d14c14acedba61a68818cde59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::isIdentity</definition>
        <argsstring>() const </argsstring>
        <name>isIdentity</name>
        <briefdescription>
<para>A = I. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="174" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="875" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1ac5e3210355a0ef21cb754f0015c101ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool matrix::Matrix&lt; T &gt;::commutesWith</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;rhs) const </argsstring>
        <name>commutesWith</name>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="188" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="896" bodyend="914"/>
        <references refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" compoundref="Matrix_8hpp" startline="91" endline="91">matrix::Matrix&lt; T &gt;::getNumCols</references>
        <references refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" compoundref="Matrix_8hpp" startline="90" endline="90">matrix::Matrix&lt; T &gt;::getNumRows</references>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1a02b6c5546a65c5af50cff7a48094f312" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T matrix::Matrix&lt; T &gt;::trace</definition>
        <argsstring>() const </argsstring>
        <name>trace</name>
        <briefdescription>
<para>Sum of diagonal elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="194" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="918" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classmatrix_1_1Matrix_1af19c4e8032c3364ab08791e25ecccf01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T matrix::Matrix&lt; T &gt;::sum</definition>
        <argsstring>() const </argsstring>
        <name>sum</name>
        <briefdescription>
<para>Sum of all elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="195" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="934" bodyend="950"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmatrix_1_1Matrix_1a44e735ed3a255c4f26f2ef273f6508ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Matrix&lt; T &gt; &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
          <briefdescription><para>Output stream </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
          <briefdescription><para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> to output </para></briefdescription>
        </param>
        <briefdescription>
<para>Pad modifier. </para>        </briefdescription>
        <detaileddescription>
<para>Display </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="104" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="302" bodyend="323"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmatrix_1_1Matrix" kindref="compound">Matrix</ref> class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" line="42" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Matrix.hpp" bodystart="41" bodyend="204"/>
    <listofallmembers>
      <member refid="classmatrix_1_1Matrix_1ac5e3210355a0ef21cb754f0015c101ff" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>commutesWith</name></member>
      <member refid="classmatrix_1_1Matrix_1a47464577950758a8a1da8455ea73ae27" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>complexConjugate</name></member>
      <member refid="classmatrix_1_1Matrix_1a93366f67006829caba19b525814596ec" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>conjugateTranspose</name></member>
      <member refid="classmatrix_1_1Matrix_1a160cd27af60a63f8ecb512f1c3ed610e" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>getMatrix</name></member>
      <member refid="classmatrix_1_1Matrix_1a344f628c8fc36c61da00cdd1cf9425e4" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>getNumCols</name></member>
      <member refid="classmatrix_1_1Matrix_1a0ac23e8199500d3abecd39f5c4971149" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>getNumRows</name></member>
      <member refid="classmatrix_1_1Matrix_1ad0cc3825f9c5a88baec185be52a56af7" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>getPad</name></member>
      <member refid="classmatrix_1_1Matrix_1a88fecb03afc587c908065bc920da5e55" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>identity</name></member>
      <member refid="classmatrix_1_1Matrix_1a6290d8381c92824a415850701a386572" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isComplex</name></member>
      <member refid="classmatrix_1_1Matrix_1aef901991ff8a7effe565e56ddd43746e" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isHermitian</name></member>
      <member refid="classmatrix_1_1Matrix_1a2ada015d14c14acedba61a68818cde59" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isIdentity</name></member>
      <member refid="classmatrix_1_1Matrix_1afe2b7f3d7e5a2cfc9201ae003609015a" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isNormal</name></member>
      <member refid="classmatrix_1_1Matrix_1afda8e7a5303dc685cc81ccaac6aa6e98" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isOrthogonal</name></member>
      <member refid="classmatrix_1_1Matrix_1a08bab97349704f714b37ba9c27110514" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isProjection</name></member>
      <member refid="classmatrix_1_1Matrix_1a151e185fb20fcc5913cf030e172dec91" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isReal</name></member>
      <member refid="classmatrix_1_1Matrix_1a6cf8b183026095222f8385d4f5101da7" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isSelfAdjoint</name></member>
      <member refid="classmatrix_1_1Matrix_1a9a68a213355b21b0de2f9893944f8655" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isSkewHermitian</name></member>
      <member refid="classmatrix_1_1Matrix_1ad85456fb492eac300607fad58ae83b3b" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isSkewSymmetric</name></member>
      <member refid="classmatrix_1_1Matrix_1a97d081b32df645d41eeccd7eb60464cc" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isSquare</name></member>
      <member refid="classmatrix_1_1Matrix_1a4f327f5ad7ef829a64d0f4ef3e20d29c" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isSymmetric</name></member>
      <member refid="classmatrix_1_1Matrix_1a747a89e859c3222d2fca232f2caacf4e" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>isUnitary</name></member>
      <member refid="classmatrix_1_1Matrix_1a054d22cc5b7c78711c823310f71495f5" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>Matrix</name></member>
      <member refid="classmatrix_1_1Matrix_1a2197dc025b1a32ceba87677d0d5b988d" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>Matrix</name></member>
      <member refid="classmatrix_1_1Matrix_1a823e33972f72b1f942099982dc101fea" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>Matrix</name></member>
      <member refid="classmatrix_1_1Matrix_1ab79912b5a12d7aa327e6bf0d918f4de9" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>Matrix</name></member>
      <member refid="classmatrix_1_1Matrix_1a7d867ccf6e5f0fab0afb93b4eacefd06" prot="private" virt="non-virtual"><scope>matrix::Matrix</scope><name>matrix</name></member>
      <member refid="classmatrix_1_1Matrix_1a5571a658e4320efa3312dac1081b0ce2" prot="private" virt="non-virtual"><scope>matrix::Matrix</scope><name>numCols</name></member>
      <member refid="classmatrix_1_1Matrix_1ab58c595a633eaaf7ea4845cce59c90fb" prot="private" virt="non-virtual"><scope>matrix::Matrix</scope><name>numRows</name></member>
      <member refid="classmatrix_1_1Matrix_1a3512dde740a7f45fb0484ee708887444" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator()</name></member>
      <member refid="classmatrix_1_1Matrix_1a02230069885fb794d62f9d544103a987" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator()</name></member>
      <member refid="classmatrix_1_1Matrix_1ad99f5a3971abebfe3545dde85612268f" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator*</name></member>
      <member refid="classmatrix_1_1Matrix_1a383ea46be492b62685a3c66b402c31d3" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator*</name></member>
      <member refid="classmatrix_1_1Matrix_1a62767d118083954b144767496c02205c" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator+</name></member>
      <member refid="classmatrix_1_1Matrix_1a4796eea2f39bbfa3ff7f9ea4a5e5f423" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator+</name></member>
      <member refid="classmatrix_1_1Matrix_1aac28bf5632d40be2c595ccbf9bfe66a8" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator-</name></member>
      <member refid="classmatrix_1_1Matrix_1ac446198a45ad411e346504c6e4698952" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator-</name></member>
      <member refid="classmatrix_1_1Matrix_1abc3f4492ae439d7a0791bbc4e9449cb5" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator-</name></member>
      <member refid="classmatrix_1_1Matrix_1a31b5e71015aba29bd63ddb32a43aacf6" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator/</name></member>
      <member refid="classmatrix_1_1Matrix_1a44e735ed3a255c4f26f2ef273f6508ee" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator&lt;&lt;</name></member>
      <member refid="classmatrix_1_1Matrix_1a5b1d2cf9e238f15d6e85e8084feafe83" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator=</name></member>
      <member refid="classmatrix_1_1Matrix_1ac6de29be44b19310f134cffd3328017d" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator==</name></member>
      <member refid="classmatrix_1_1Matrix_1afb301157a2f218f5877793e8a238fc58" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>operator^</name></member>
      <member refid="classmatrix_1_1Matrix_1a361ac8fbb03f94da4b76767a747e5b71" prot="private" virt="non-virtual"><scope>matrix::Matrix</scope><name>pad</name></member>
      <member refid="classmatrix_1_1Matrix_1a83c1665465ab7ef98fa7003127cadac9" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>setPad</name></member>
      <member refid="classmatrix_1_1Matrix_1af19c4e8032c3364ab08791e25ecccf01" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>sum</name></member>
      <member refid="classmatrix_1_1Matrix_1a02b6c5546a65c5af50cff7a48094f312" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>trace</name></member>
      <member refid="classmatrix_1_1Matrix_1ac327db77a3c97f88e2a470c1205ddabd" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>transpose</name></member>
      <member refid="classmatrix_1_1Matrix_1a936cd883f1768e78478925929ea3d147" prot="public" virt="non-virtual"><scope>matrix::Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
