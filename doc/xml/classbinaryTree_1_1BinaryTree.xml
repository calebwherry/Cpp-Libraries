<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classbinaryTree_1_1BinaryTree" kind="class" prot="public">
    <compoundname>binaryTree::BinaryTree</compoundname>
    <basecompoundref refid="classtree_1_1Tree" prot="public" virt="non-virtual">tree::Tree</basecompoundref>
    <includes refid="BinaryTree_8hpp" local="yes">BinaryTree.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbinaryTree_1_1BinaryTree_1a4acdb7e36855c68a15a315ece7b6a6d3" prot="private" static="no" mutable="no">
        <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
        <definition>Node&lt;T&gt;* binaryTree::BinaryTree&lt; T &gt;::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
<para>Root <ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="55" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a0605077da9009bf1c5ce15ccdd86d4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>binaryTree::BinaryTree&lt; T &gt;::BinaryTree</definition>
        <argsstring>()</argsstring>
        <name>BinaryTree</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="59" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a4d0e855e44b6e456659d627c34e4dc8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>binaryTree::BinaryTree&lt; T &gt;::~BinaryTree</definition>
        <argsstring>()</argsstring>
        <name>~BinaryTree</name>
        <briefdescription>
<para>Deconstructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="62" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a0a316ce96471e890d341b792bd35818a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::insert</definition>
        <argsstring>(T givenData)</argsstring>
        <name>insert</name>
        <param>
          <type>T</type>
          <declname>givenData</declname>
        </param>
        <briefdescription>
<para>Insert item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="65" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="117" bodyend="130"/>
        <references refid="structbinaryTree_1_1Node_1afaa501220b0051287ddf2bb7a38ac09b" compoundref="BinaryTree_8hpp" startline="44">binaryTree::Node&lt; T &gt;::datum</references>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a1c1ae9d052062a790425537d6a10b0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::insert</definition>
        <argsstring>(T givenData, Node&lt; T &gt; *givenNode)</argsstring>
        <name>insert</name>
        <param>
          <type>T</type>
          <declname>givenData</declname>
        </param>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>Insert item at node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="68" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="133" bodyend="166"/>
        <references refid="structbinaryTree_1_1Node_1afaa501220b0051287ddf2bb7a38ac09b" compoundref="BinaryTree_8hpp" startline="44">binaryTree::Node&lt; T &gt;::datum</references>
        <references refid="structbinaryTree_1_1Node_1a1892fef92312a1f93ec0e99901145f78" compoundref="BinaryTree_8hpp" startline="45">binaryTree::Node&lt; T &gt;::leftChild</references>
        <references refid="structbinaryTree_1_1Node_1ad80da15e3643639a0e9ff964c9d83ae9" compoundref="BinaryTree_8hpp" startline="46">binaryTree::Node&lt; T &gt;::rightChild</references>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1aab6c8ba38982c02ec902b24b76d4d167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::remove</definition>
        <argsstring>(T givenData)</argsstring>
        <name>remove</name>
        <param>
          <type>T</type>
          <declname>givenData</declname>
        </param>
        <briefdescription>
<para>Remove item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="71" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a7284bf49d7fe7b3c1e4a3541f38cd9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::remove</definition>
        <argsstring>(T givenData, Node&lt; T &gt; *givenNode)</argsstring>
        <name>remove</name>
        <param>
          <type>T</type>
          <declname>givenData</declname>
        </param>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>Remove item at node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="74" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1ad26019df7707ec33825e165e3e592fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::preOrderTraversal</definition>
        <argsstring>()</argsstring>
        <name>preOrderTraversal</name>
        <briefdescription>
<para>preOrderTravesal from the root node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="77" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1af7c8afc9eed5189283b8b188195eb171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::preOrderTraversal</definition>
        <argsstring>(Node&lt; T &gt; *givenNode)</argsstring>
        <name>preOrderTraversal</name>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>preOrderTravesal from a given node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="80" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="187" bodyend="201"/>
        <references refid="structbinaryTree_1_1Node_1afaa501220b0051287ddf2bb7a38ac09b" compoundref="BinaryTree_8hpp" startline="44">binaryTree::Node&lt; T &gt;::datum</references>
        <references refid="structbinaryTree_1_1Node_1a1892fef92312a1f93ec0e99901145f78" compoundref="BinaryTree_8hpp" startline="45">binaryTree::Node&lt; T &gt;::leftChild</references>
        <references refid="structbinaryTree_1_1Node_1ad80da15e3643639a0e9ff964c9d83ae9" compoundref="BinaryTree_8hpp" startline="46">binaryTree::Node&lt; T &gt;::rightChild</references>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1ac698ef815ef2070b9cef00da006f1499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::inOrderTraversal</definition>
        <argsstring>()</argsstring>
        <name>inOrderTraversal</name>
        <briefdescription>
<para>inOrderTraversal from the root node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="83" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a45ad89139b915b0c24d0e2ac812b545b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::inOrderTraversal</definition>
        <argsstring>(Node&lt; T &gt; *givenNode)</argsstring>
        <name>inOrderTraversal</name>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>inOrderTraversal from a given node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="86" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="210" bodyend="225"/>
        <references refid="structbinaryTree_1_1Node_1afaa501220b0051287ddf2bb7a38ac09b" compoundref="BinaryTree_8hpp" startline="44">binaryTree::Node&lt; T &gt;::datum</references>
        <references refid="structbinaryTree_1_1Node_1a1892fef92312a1f93ec0e99901145f78" compoundref="BinaryTree_8hpp" startline="45">binaryTree::Node&lt; T &gt;::leftChild</references>
        <references refid="structbinaryTree_1_1Node_1ad80da15e3643639a0e9ff964c9d83ae9" compoundref="BinaryTree_8hpp" startline="46">binaryTree::Node&lt; T &gt;::rightChild</references>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a253ebeb47bc56d441b7f58b83fed182d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::postOrderTraversal</definition>
        <argsstring>()</argsstring>
        <name>postOrderTraversal</name>
        <briefdescription>
<para>postOrderTraversal from the root node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="89" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a48de4d016b00cde76da6a8773eee5e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::postOrderTraversal</definition>
        <argsstring>(Node&lt; T &gt; *givenNode)</argsstring>
        <name>postOrderTraversal</name>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>postOrderTraversal from a given node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="92" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="234" bodyend="248"/>
        <references refid="structbinaryTree_1_1Node_1afaa501220b0051287ddf2bb7a38ac09b" compoundref="BinaryTree_8hpp" startline="44">binaryTree::Node&lt; T &gt;::datum</references>
        <references refid="structbinaryTree_1_1Node_1a1892fef92312a1f93ec0e99901145f78" compoundref="BinaryTree_8hpp" startline="45">binaryTree::Node&lt; T &gt;::leftChild</references>
        <references refid="structbinaryTree_1_1Node_1ad80da15e3643639a0e9ff964c9d83ae9" compoundref="BinaryTree_8hpp" startline="46">binaryTree::Node&lt; T &gt;::rightChild</references>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1a70a4c6b978b21172d25e4bad214bc901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::breadthFirstTraversal</definition>
        <argsstring>()</argsstring>
        <name>breadthFirstTraversal</name>
        <briefdescription>
<para>breadthFirstTraversal from the root node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="95" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1ae18f2e99a100b60ca68c7d85563e6676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::breadthFirstTraversal</definition>
        <argsstring>(Node&lt; T &gt; *givenNode)</argsstring>
        <name>breadthFirstTraversal</name>
        <param>
          <type><ref refid="structbinaryTree_1_1Node" kindref="compound">Node</ref>&lt; T &gt; *</type>
          <declname>givenNode</declname>
        </param>
        <briefdescription>
<para>breadthFirstTraversal from a given node </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="98" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classbinaryTree_1_1BinaryTree_1ad57b6b69f944ae45262c635fb7cc3bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void binaryTree::BinaryTree&lt; T &gt;::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <reimplements refid="classtree_1_1Tree_1ae5b70de2d45be21d9b1b272c945b6248">print</reimplements>
        <briefdescription>
<para>Print Binary Tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="101" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="265" bodyend="268"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtree_1_1Tree_1ae808b4b4b204faaa40e1e636ebfab8e6" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tree::Tree::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <briefdescription>
<para><ref refid="classtree_1_1Tree" kindref="compound">Tree</ref> Depth. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Tree.hpp" line="46" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/Tree.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binary Tree class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tree::Tree</label>
        <link refid="classtree_1_1Tree"/>
      </node>
      <node id="0">
        <label>binaryTree::BinaryTree&lt; T &gt;</label>
        <link refid="classbinaryTree_1_1BinaryTree"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>tree::Tree</label>
        <link refid="classtree_1_1Tree"/>
      </node>
      <node id="2">
        <label>binaryTree::BinaryTree&lt; T &gt;</label>
        <link refid="classbinaryTree_1_1BinaryTree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" line="52" column="1" bodyfile="/home/calebwherry/Downloads/repos_github/Cpp-Libraries/lib/DataStructures/BinaryTree.hpp" bodystart="51" bodyend="103"/>
    <listofallmembers>
      <member refid="classbinaryTree_1_1BinaryTree_1a0605077da9009bf1c5ce15ccdd86d4d7" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>BinaryTree</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a70a4c6b978b21172d25e4bad214bc901" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>breadthFirstTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1ae18f2e99a100b60ca68c7d85563e6676" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>breadthFirstTraversal</name></member>
      <member refid="classtree_1_1Tree_1ae808b4b4b204faaa40e1e636ebfab8e6" prot="protected" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>depth</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1ac698ef815ef2070b9cef00da006f1499" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>inOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a45ad89139b915b0c24d0e2ac812b545b" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>inOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a0a316ce96471e890d341b792bd35818a" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>insert</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a1c1ae9d052062a790425537d6a10b0b8" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>insert</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a253ebeb47bc56d441b7f58b83fed182d" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>postOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a48de4d016b00cde76da6a8773eee5e52" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>postOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1ad26019df7707ec33825e165e3e592fd3" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>preOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1af7c8afc9eed5189283b8b188195eb171" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>preOrderTraversal</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1ad57b6b69f944ae45262c635fb7cc3bdc" prot="public" virt="virtual"><scope>binaryTree::BinaryTree</scope><name>print</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1aab6c8ba38982c02ec902b24b76d4d167" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>remove</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a7284bf49d7fe7b3c1e4a3541f38cd9b1" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>remove</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a4acdb7e36855c68a15a315ece7b6a6d3" prot="private" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>root</name></member>
      <member refid="classtree_1_1Tree_1a66755a8dbcf714aa93e63952bdb62484" prot="protected" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>Tree</name></member>
      <member refid="classbinaryTree_1_1BinaryTree_1a4d0e855e44b6e456659d627c34e4dc8a" prot="public" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>~BinaryTree</name></member>
      <member refid="classtree_1_1Tree_1af393c36d4a1520937a7d5fcd985d9e08" prot="protected" virt="non-virtual"><scope>binaryTree::BinaryTree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
